// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shhhtoshi.Api.DB;

#nullable disable

namespace ShhhToshiApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250825164458_StakeUnstakeControllerUpdate")]
    partial class StakeUnstakeControllerUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShhhToshiApp.Models.StakingUnstaking.WalletUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastStakedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUnstakedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<decimal>("StakedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TONBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WalletAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("WalletAddress")
                        .IsUnique();

                    b.ToTable("WalletUsers");
                });

            modelBuilder.Entity("ShhhToshiApp.Models.TaskSystem.PointClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ClaimedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ConvertedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PointsClaimed")
                        .HasColumnType("int");

                    b.Property<string>("WalletAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("WalletAddress");

                    b.ToTable("PointClaims");
                });

            modelBuilder.Entity("ShhhToshiApp.Models.TaskSystem.TaskCompletion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalletAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("WalletAddress");

                    b.ToTable("TaskCompletions");
                });

            modelBuilder.Entity("ShhhToshiApp.Models.TaskSystem.TaskItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaskItems");
                });

            modelBuilder.Entity("ShhhToshiApp.Models.TaskSystem.PointClaim", b =>
                {
                    b.HasOne("ShhhToshiApp.Models.StakingUnstaking.WalletUser", "WalletUser")
                        .WithMany("PointClaims")
                        .HasForeignKey("WalletAddress")
                        .HasPrincipalKey("WalletAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WalletUser");
                });

            modelBuilder.Entity("ShhhToshiApp.Models.TaskSystem.TaskCompletion", b =>
                {
                    b.HasOne("ShhhToshiApp.Models.TaskSystem.TaskItem", "TaskItem")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShhhToshiApp.Models.StakingUnstaking.WalletUser", "WalletUser")
                        .WithMany("TaskCompletions")
                        .HasForeignKey("WalletAddress")
                        .HasPrincipalKey("WalletAddress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskItem");

                    b.Navigation("WalletUser");
                });

            modelBuilder.Entity("ShhhToshiApp.Models.StakingUnstaking.WalletUser", b =>
                {
                    b.Navigation("PointClaims");

                    b.Navigation("TaskCompletions");
                });
#pragma warning restore 612, 618
        }
    }
}
